// #region imports
    // #region libraries
    import {
        NewEntityField,
    } from '~kernel-components/NewEntityRenderer/data';
    // #endregion libraries
// #endregion imports



// #region module
export const fields: NewEntityField[] = [
    {
        label: 'name',
        type: 'string',
        state: 'name',
        value: 'new function',
        required: true,
    },
    {
        label: 'gradient_x',
        type: 'group',
        state: 'gradientX',
        value: [
            {
                label: 'slope',
                type: 'number',
                state: 'slope',
                value: 1.0,
                format: 'float',
                required: true,
                help: 'rate of change of gradient per unit x-dimension',
            },
            {
                label: 'x-offset',
                type: 'number',
                state: 'xOffset',
                value: 0,
                format: 'float',
                required: true,
                help: 'offset to all gradient values along the horizontal axis',
            },
            {
                label: 'z-offset',
                type: 'number',
                state: 'zOffset',
                value: 0,
                format: 'float',
                required: true,
            },
            {
                label: 'exponent',
                type: 'number',
                state: 'exponent',
                value: 1,
                format: 'float',
                required: true,
                help: 'Hill exponent for gradient values',
            },
        ],
        required: true,
        help: 'generate a spatial gradient of a property in the x-direction',
    },
    {
        label: 'gradient_y',
        type: 'group',
        state: 'gradientY',
        value: [
            {
                label: 'slope',
                type: 'number',
                state: 'slope',
                value: 1.0,
                format: 'float',
                required: true,
                help: 'rate of change of gradient per unit x-dimension',
            },
            {
                label: 'x-offset',
                type: 'number',
                state: 'xOffset',
                value: 0,
                format: 'float',
                required: true,
                help: 'offset to all gradient values',
            },
            {
                label: 'z-offset',
                type: 'number',
                state: 'zOffset',
                value: 0,
                format: 'float',
                required: true,
            },
            {
                label: 'exponent',
                type: 'number',
                state: 'exponent',
                value: 1,
                format: 'float',
                required: true,
                help: 'Hill exponent for gradient values',
            },
        ],
        required: true,
        help: 'generate a spatial gradient of a property in the y-direction',
    },
    {
        label: 'gradient_r',
        type: 'group',
        state: 'gradientR',
        value: [
            {
                label: 'slope',
                type: 'number',
                state: 'slope',
                value: 1.0,
                format: 'float',
                required: true,
                help: 'radial gradient rate of change per unit radius',
            },
            {
                label: 'x-offset',
                type: 'number',
                state: 'xOffset',
                value: 0,
                format: 'float',
                required: true,
            },
            {
                label: 'z-offset',
                type: 'number',
                state: 'zOffset',
                value: 0,
                format: 'float',
                required: true,
            },
            {
                label: 'exponent',
                type: 'number',
                state: 'exponent',
                value: 1,
                format: 'float',
                required: true,
                help: 'Hill exponent for gradient values',
            },
        ],
        required: true,
        help: 'generate a radial spatial gradient of a property',
    },
    {
        label: 'periodic',
        type: 'group',
        state: 'periodic',
        value: [
            {
                label: 'frequency',
                type: 'number',
                state: 'frequency',
                value: 10,
                format: 'float',
                required: true,
                unit: 'Hz',
                help: 'frequency of oscillation',
            },
            {
                label: 'phase',
                type: 'number',
                state: 'phase',
                value: 0,
                format: 'float',
                required: true,
                help: 'phase-offset of oscillation',
            },
        ],
        required: true,
        help: 'generate a sinusoidal oscillation of a property',
    },
    {
        label: 'f sweep',
        type: 'group',
        state: 'fSweep',
        value: [
            {
                label: 'start frequency',
                type: 'number',
                state: 'startFrequency',
                value: 0.1e3,
                format: 'scientific',
                required: true,
                help: 'start frequency',
            },
            {
                label: 'end frequency',
                type: 'number',
                state: 'endFrequency',
                value: 1e3,
                format: 'scientific',
                required: true,
                help: 'end frequency',
            },
        ],
        required: true,
        help: 'apply a sinusoidal oscillation of a property as a sequence of frequencies',
    },
    {
        label: 'gradient bitmap',
        type: 'group',
        state: 'gradientBitmap',
        value: [
            {
                label: 'file',
                type: 'file',
                state: 'file',
                required: true,
                help: `red is treated as positive, blue is treated as negative, and black is treated as zero`,
            },
            {
                label: 'z-offset',
                type: 'number',
                state: 'zOffset',
                value: 0.0,
                format: 'float',
                required: true,
            },
        ],
        required: true,
        help: 'generate a spatial gradient of a property from an imported bitmap image (png)',
    },
    {
        label: 'single cell',
        type: 'group',
        state: 'singleCell',
        value: [
            {
                label: 'z-offset',
                type: 'number',
                state: 'zOffset',
                value: 0.0,
                format: 'float',
                required: true,
            },
        ],
        required: true,
        help: 'randomly select a boundary cell and make that the maxima of the modulation',
    },
];
// #endregion module
