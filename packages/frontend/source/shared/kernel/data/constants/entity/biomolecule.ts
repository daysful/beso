// #region imports
    // #region external
    import {
        eventRecords,
    } from '~kernel-data/constants';

    import {
        NewEntityField,
        NumberField,
    } from '~kernel-components/NewEntityRenderer/data';
    // #endregion external
// #endregion imports



// #region module
const commonFields: Record<string, NewEntityField> = {
    activators: {
        label: 'activators',
        type: 'string',
        state: 'activators',
        value: 'None',
        required: true,
        help: 'list of defined substances or simulation ions activating expression',
    },
    KmActivators: {
        label: 'Km activators',
        type: 'string',
        state: 'Km_activators',
        value: 'None',
        required: true,
        help: 'list of half-maximum values for activators',
    },
    nActivators: {
        label: 'n activators',
        type: 'string',
        state: 'n_activators',
        value: 'None',
        required: true,
        help: 'list of Hill exponent of activators',
    },
    inhibitors: {
        label: 'inhibitors',
        type: 'list',
        state: 'inhibitors',
        value: [ 'B' ],
        required: true,
        help: 'list of defined substances or simulation ions inhibiting expression',
    },
    KmInhibitors: {
        label: 'Km inhibitors',
        type: 'list',
        state: 'Km_inhibitors',
        value: [ 1.0 ],
        required: true,
        help: 'list of half-maximum values for inhibitors',
    },
    nInhibitors: {
        label: 'n inhibitors',
        type: 'list',
        state: 'n_inhibitors',
        value: [ 3.0 ],
        required: true,
        help: 'list of Hill exponent of inhibitors',
    },
};


export const fields: NewEntityField[] = [
    {
        label: 'name',
        type: 'string',
        state: 'name',
        value: 'new biomolecule',
        required: true,
    },
    {
        label: 'Dm',
        type: 'number',
        state: 'Dm',
        value: 1.0e-18,
        format: 'scientific',
        required: true,
        unit: 'm2/s',
        help: 'membrane diffusion coefficient',
    },
    {
        label: 'Do',
        type: 'number',
        state: 'Do',
        value: 1.0e-10,
        format: 'scientific',
        required: true,
        unit: 'm2/s',
        help: 'free diffusion constant in extra and intracellular spaces',
    },
    {
        label: 'Dgj',
        type: 'number',
        state: 'Dgj',
        value: 1.0e-16,
        format: 'scientific',
        required: true,
        help: 'effective diffusion constant through gap junctions',
    },
    {
        label: 'Mu_mem',
        type: 'number',
        state: 'Mu_mem',
        value: 0.0,
        format: 'float',
        required: true,
        help: 'assumes substance embeds in membrane and has fininte electrophoretic mobility',
    },
    {
        label: 'u_mtube',
        type: 'number',
        state: 'u_mtube',
        value: 0.0,
        format: 'float',
        required: true,
        unit: 'm/s',
        help: 'rate of transport via motor proteins on microtubules (max of about 5.0e-6 m/s)',
    },
    {
        label: 'z',
        type: 'number',
        state: 'z',
        value: -2,
        format: 'float',
        required: true,
        unit: 'm/s',
        help: 'charge (oxidation state)',
    },
    {
        label: 'env conc',
        type: 'number',
        state: 'env_conc',
        value: 1.0e-3,
        format: 'scientific',
        required: true,
        unit: 'mmol/L',
        help: 'initial concentration in the environment',
    },
    {
        label: 'cell conc',
        type: 'number',
        state: 'cell_conc',
        value: 1.5,
        format: 'float',
        required: true,
        unit: 'mmol/L',
        help: 'initial concentration in the cytoplasm',
    },
    {
        label: 'mit conc',
        type: 'number',
        state: 'mit_conc',
        value: 0.0,
        format: 'float',
        required: true,
        unit: 'mmol/L',
        help: 'initial concentration in the mitochondria (if mit enabled)',
    },
    {
        label: 'transmem',
        type: 'boolean',
        state: 'transmem',
        value: false,
        required: true,
        help: 'substance embeded in membrane (and therefore movable by extracellular fields, flow)',
    },
    {
        label: 'update intracellular',
        type: 'boolean',
        state: 'update_intracellular',
        value: false,
        required: true,
        help: 'allows you to shut off intracellular transport for fast diffusion with stability',
    },
    {
        label: 'initial asymmetry',
        type: 'string',
        state: 'initial_asymmetry',
        value: '',
        required: true,
        help: `function applied to initial cell concentrations ('gradient_x', 'gradient_y', 'gradient_r', 'gradient_bitmap', 'single_cell', or 'None')`,
    },
    {
        label: 'TJ permeable',
        type: 'boolean',
        state: 'TJ_permeable',
        value: false,
        required: true,
        help: 'can substances pass through tight junctions (e.g. dissolved oxygen)',
    },
    {
        label: 'GJ impermeable',
        type: 'boolean',
        state: 'GJ_impermeable',
        value: false,
        required: true,
        help: 'are substances impermeable through gap junctions (i.e. due to size)',
    },
    {
        label: 'TJ factor',
        type: 'number',
        state: 'TJ_factor',
        value: 1.0,
        format: 'float',
        required: true,
        help: 'TJ factor (relative factor to decrease tight junction permeability)',
    },
    {
        label: 'ignore ECM',
        type: 'boolean',
        state: 'ignore_ECM',
        value: true,
        required: true,
        help: 'treat extracellular spaces as full grid square volume',
    },
    {
        label: 'scale factor',
        type: 'number',
        state: 'scale_factor',
        value: 1.0e-3,
        format: 'scientific',
        required: true,
        help: 'amount to scale molecule concentration by',
    },
    {
        label: 'use time dilation',
        type: 'boolean',
        state: 'use_time_dilation',
        value: false,
        required: true,
        help: 'use time dilation factor for transport and growth/decay of this substance',
    },
    {
        label: 'growth and decay',
        type: 'group',
        state: 'growth_and_decay',
        value: [
            {
                label: 'production rate',
                type: 'number',
                state: 'production_rate',
                value: 1.0,
                format: 'float',
                required: true,
                help: 'maximum rate at which molecule is produced in the cytoplasm',
            },
            {
                label: 'decay rate',
                type: 'number',
                state: 'decay_rate',
                value: 0.5,
                format: 'float',
                required: true,
                help: 'maximum rate at which molecule is degraded in the cytoplasm',
            },
            {
                label: 'apply to',
                type: 'list',
                state: 'apply_to',
                value: [ 'Spot' ],
                required: true,
                help: 'apply growth only to one or more specific tissue profiles (e.g., ["Spot", "Crest"]) or "all" for everything.',
            },
            {
                label: 'modulator function',
                type: 'string',
                state: 'modulator_function',
                value: 'gradient_x',
                required: true,
                help: `spatial modulation of production, options 'gradient_x','gradient_y', 'gradient_r', 'gradient_bitmap', 'single_cell' or 'None'`,
            },
            {
                label: 'activators',
                type: 'string',
                state: 'activators',
                value: 'None',
                required: true,
                help: 'list of defined substances or simulation ions activating expression',
            },
            {
                label: 'Km activators',
                type: 'string',
                state: 'Km_activators',
                value: 'None',
                required: true,
                help: 'list of half-maximum values for activators',
            },
            {
                label: 'n activators',
                type: 'string',
                state: 'n_activators',
                value: 'None',
                required: true,
                help: 'list of Hill exponent of activators',
            },
            {
                label: 'inhibitors',
                type: 'list',
                state: 'inhibitors',
                value: [ 'B' ],
                required: true,
                help: 'list of defined substances or simulation ions inhibiting expression',
            },
            {
                label: 'Km inhibitors',
                type: 'list',
                state: 'Km_inhibitors',
                value: [ 1.0 ],
                required: true,
                help: 'list of half-maximum values for inhibitors',
            },
            {
                label: 'n inhibitors',
                type: 'list',
                state: 'n_inhibitors',
                value: [ 3.0 ],
                required: true,
                help: 'list of Hill exponent of inhibitors',
            },
        ],
        help: 'settings for production/decay of substances (standard GRN model)',
    },
    {
        label: 'ion channel gating',
        type: 'group',
        state: 'ion_channel_gating',
        value: [
            {
                label: 'channel name',
                type: 'string',
                state: 'channel_name',
                value: 'P2X',
                required: true,
                help: 'supply a unique name for the channel (for inclusion on net graph)',
            },
            {
                label: 'ion channel target',
                type: 'list',
                state: 'ion_channel_target',
                value: [ 'Na', 'K' ],
                required: true,
                help: `ion channel target ('None', 'Na', 'K', 'Cl','Ca')`,
            },
            {
                label: 'target Hill coefficient',
                type: 'number',
                state: 'target_Hill_coefficient',
                value: 1.0e-3,
                format: 'scientific',
                required: true,
                help: `half-max value for channel opening with respect to concentration`,
            },
            {
                label: 'target Hill exponent',
                type: 'number',
                state: 'target_Hill_exponent',
                value: 1.0,
                format: 'float',
                required: true,
                help: `Hill exponent; affects shape of opening-vs-concentration curve`,
            },
            {
                label: 'peak channel opening',
                type: 'number',
                state: 'peak_channel_opening',
                value: 1e-16,
                format: 'scientific',
                required: true,
                help: `max mem diffusion constant for target ion when channel fully open`,
            },
            {
                label: 'acts extracellularly',
                type: 'boolean',
                state: 'acts_extracellularly',
                value: false,
                required: true,
                help: 'acts via extracellular (True) or intracellular (False) concentration',
            },
            commonFields.activators,
            commonFields.KmActivators,
            commonFields.nActivators,
            {
                label: 'zone activators',
                type: 'string',
                state: 'zone_activators',
                value: 'None',
                required: true,
                help: `location of concentration having an influence ('cell' or 'env')`,
            },
            commonFields.inhibitors,
            commonFields.KmInhibitors,
            commonFields.nInhibitors,
            {
                label: 'zone inhibitors',
                type: 'string',
                state: 'zone_inhibitors',
                value: 'None',
                required: true,
                help: `location of concentration having an influence ('cell' or 'env')`,
            },
        ],
    },
    {
        label: 'active pumping',
        type: 'group',
        state: 'active_pumping',
        value: [
            {
                label: 'turn on',
                type: 'boolean',
                state: 'turn_on',
                value: false,
                required: true,
                help: 'turn pumping on',
            },
            {
                label: 'pump to cell',
                type: 'boolean',
                state: 'pump_to_cell',
                value: false,
                required: true,
                help: 'pump from extracellular space to cell (true) or reverse (false)',
            },
            {
                label: 'maximum rate',
                type: 'number',
                state: 'maximum_rate',
                value: 1.0e-8,
                format: 'scientific',
                required: true,
                unit: 'mol/s',
                help: `maximum rate constant of pumping`,
            },
            {
                label: 'pump Km',
                type: 'number',
                state: 'pump_Km',
                value: 1.0e-3,
                format: 'scientific',
                required: true,
                unit: 'mol/s',
                help: `1/2 rate point coefficient for molecule in pump reaction`,
            },
            {
                label: 'uses ATP',
                type: 'boolean',
                state: 'uses_ATP',
                value: false,
                required: true,
                help: 'uses ATP or facilitated transport',
            },
        ],
        help: 'use ATP driven pumps to actively move the substance across membranes',
    },
    {
        label: 'change at bounds',
        type: 'group',
        state: 'change_at_bounds',
        value: [
            eventRecords.eventHappens,
            {
                ...eventRecords.changeStart,
                value: 1.0,
            } as NumberField,
            {
                ...eventRecords.changeFinish,
                value: 7.0,
            } as NumberField,
            {
                ...eventRecords.changeRate,
                value: 1.0,
            } as NumberField,
            {
                label: 'concentration',
                type: 'number',
                state: 'concentration',
                value: 1e-3,
                format: 'scientific',
                required: true,
                unit: 'mmol/L',
                help: `target concentration for duration of change`,
            },
        ],
        help: 'change the environmental concentration of molecule from the global boundary',
    },
    {
        label: 'plotting',
        type: 'group',
        state: 'plotting',
        value: [
            {
                label: 'plot 2D',
                type: 'boolean',
                state: 'plot_2D',
                value: true,
                required: true,
                help: 'create a unique set of plots for the substance',
            },
            {
                label: 'animate',
                type: 'boolean',
                state: 'animate',
                value: true,
                required: true,
                help: 'animate the substance during the sampled time-steps of the simulation',
            },
            {
                label: 'autoscale colorbar',
                type: 'boolean',
                state: 'autoscale_colorbar',
                value: true,
                required: true,
                help: 'autoscale the min-max values of the colorbar',
            },
            {
                label: 'max val',
                type: 'number',
                state: 'max_val',
                value: 2.0,
                format: 'float',
                required: true,
                unit: 'umol/L',
                help: `if autoscale is False, max value to use for plot in umol/L`,
            },
            {
                label: 'min val',
                type: 'number',
                state: 'min_val',
                value: 0.0,
                format: 'float',
                required: true,
                unit: 'umol/L',
                help: `if autoscale is False, min value to use for plot in umol/L`,
            },
        ],
    },
];
// #endregion module
